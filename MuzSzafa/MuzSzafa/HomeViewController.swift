//
//  HomeViewController.swift
//  MuzSzafa
//
//  Created by Alagris on 18/03/2018.
//  Copyright Â© 2018 alagris. All rights reserved.
//

import UIKit
import MuzSzafaFramework
import MuzSzafaShared
import CoreData
class HomeViewController: UIViewController, UISearchBarDelegate {

	@IBOutlet weak var entities: EntitiesTableView!{
		didSet{
			entities.onChangeImpl = { [weak self] _ in
				self!.performSegue(withIdentifier: "presentEntity", sender: self!.entities.getSelected())
			}
			entities.allowDeleting = true
		}
	}
	@IBOutlet weak var attribute: GenericPicker!{
		didSet{
			attribute.onChangeImpl = {[weak self] _ in
				if self!.searchBar.text?.count ?? 0 > 0{
					self!.updateSearch()
				}
			}
			attribute.stringifyImpl = {
				if let r = $0 as? CoreDataAttr{
					return getLocalizedString(for: r.name)
				}
				return String?.OR
			}
			
		}
	}
	
	var ent:CoreDataEntity?{
		get{
			return type.getSelected() as! CoreDataEntity?
		}
	}
	
	var attr:CoreDataAttr?{
		get{
			return attribute.getSelected() as! CoreDataAttr?
		}
	}
	
	@IBOutlet weak var type: GenericPicker!{
		didSet{
			type.stringifyImpl = {
				getLocalizedString(for: ($0 as! CoreDataEntity).name.or())
			}
			type.onChangeImpl = { [weak self] _ in
				if let t = self!.ent{
					self!.attribute.reloadData(t.attrs)
					self!.entities.pred = nil
					self!.entities.ent = t
					if self!.searchBar.text?.count ?? 0 > 0{
						self!.updateSearch()
					}
				}
			}
			type.reloadData([Deal.ent,Instrument.ent,Client.ent,InstrumentType.ent])
			type.setSelectedRow(0)
			attribute?.reloadData(Deal.ent.attrs)
			attribute.setSelectedRow(0)
		}
	}
	
    override func viewDidLoad() {
        super.viewDidLoad()
		
    }
	
	func updateSearch(){
		searchBar(searchBar, textDidChange: searchBar.text!)
	}
	
	@IBAction func new(_ sender: Any) {
		guard let ent = ent else {return}
		if ent == Deal.ent{
			performSegue(withIdentifier: "newDeal", sender: nil)
		}else if ent == Client.ent{
			let client = Client.ent.newAutogenerated()
			performSegue(withIdentifier: "presentEntity", sender: client)
		}else if ent == Instrument.ent{
			performSegue(withIdentifier: "newInstrument", sender: nil)
		}else if ent == InstrumentType.ent{
			performSegue(withIdentifier: "newInstrumentType", sender: nil)
		}
	}
	
	override func viewWillAppear(_ animated: Bool) {
		entities.ent = ent
	}
	
	func searchBarSearchButtonClicked(_ searchBar: UISearchBar) {
//		entities.pred = selectedEnt.primaryKeyAttr.e
		searchBar.endEditing(true)
	}
	
	func searchBar(_ searchBar: UISearchBar, textDidChange searchText: String) {
		if searchText == ""{
			entities.reloadData(pred: nil)
			return
		}
		guard let attr = attr else{return}
		assert(ent==attr.parent,"expected \((ent?.name).or()) but was \((attr.parent.name).or())")
		guard let pred = attr.makeSearchPred(for: searchText) else {return}
		entities.reloadData(pred: ent?.safePred(expr: pred))
	}
	
	@IBOutlet weak var searchBar: UISearchBar!{
		didSet{
			searchBar.delegate = self
		}
	}
	
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
    }
    

    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
		switch segue.identifier {
		case "presentEntity":
			if let c = segue.destination as? EntityViewController{
				assert(sender is NSManagedObject)
				if let mo = sender as? NSManagedObject{
					c.mo = mo
				}
			}
//		case "newInstrument":
//			let dest = segue.destination as! NewInstrumentViewController
		default:
			break
		}
    }

}
