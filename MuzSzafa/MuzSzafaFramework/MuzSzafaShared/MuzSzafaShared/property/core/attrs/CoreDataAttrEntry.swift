//
//  CoreDataAttrEntry.swift
//  MuzSzafaShared
//
//  Created by Alagris on 25/03/2018.
//  Copyright Â© 2018 alagris. All rights reserved.
//
import CoreData
public typealias Entry = (key:String,value:NSAttributeDescription)
open class CoreDataAttrEntry:CoreDataAttr{
	
    public lazy var serializer: CoreDataSerializer = newCoreDataSerializer(from: self)
    
    public var options: PropertyOptionDict
    
    public weak var parent: CoreDataEntity!
	
	public var hideFromUser:Bool = false
    
    public var isPrimaryKey: Bool = false
    
    public var rawType: NSAttributeType
    
    public var type: PropertyType
    
    public var name: String
    
    public var vis: PropertyVisibility
    
    public var isAutogenerated: Bool
    
    public var isFiltrable: Bool
    
    public convenience init(dict entry: Entry,json:[String:String]){
        self.init(value:entry.value,json:json)
    }
    public init(value:NSAttributeDescription,json:[String:String]){
        rawType = value.attributeType
        type = CoreDataAttrEntry.parseType(json: json,rawType: rawType)
        name = CoreDataAttrEntry.parseName(json: json)
		hideFromUser = CoreDataAttrEntry.parseHideFromUser(json: json)
        isPrimaryKey = CoreDataAttrEntry.parseIsPrimaryKey(json: json)
        vis = CoreDataAttrEntry.parseVisibility(json: json)
        isAutogenerated = CoreDataAttrEntry.parseIsAutogenerated(json: json)
        isFiltrable = CoreDataAttrEntry.parseIsFiltrable(json: json)
        options = CoreDataAttrEntry.parseOptions(json: json,type:type)
        if isFiltrable && !type.isFiltrable{
            fatalError("Attr \(name) of type \(type) cannot be filtrable!")
        }
    }
    
}
